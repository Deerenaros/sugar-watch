version: "3.9"

services:
  traefik:
    image: "traefik:v2.2.1"
    container_name: traefik
    hostname: traefik
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api
      - --certificatesresolvers.le.acme.email=uvesnin@gmail.com
      - --certificatesresolvers.le.acme.storage=./acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${PWD}/acme.json:/acme.json"
    labels:
      - "traefik.enable=true"
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
    networks:
      - traefik-public

  bloodwatch:
    build: .
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bloodwatch.rule=Host(`bloodwatch.tk`) && PathPrefix(`/12dca748-55eb-11ed-a150-2a033e20105e`)"
      - "traefik.http.middlewares.bloodwatch.replacepath.path=/"
      - "traefik.http.services.bloodwatch.loadbalancer.server.port=5000"
      - "traefik.http.routers.bloodwatch.entrypoints=websecure"
      - "traefik.http.routers.bloodwatch.tls=true"
      - "traefik.http.routers.bloodwatch.middlewares=bloodwatch@docker"
      - "traefik.http.routers.bloodwatch.tls.certresolver=le"
    networks:
      - traefik-public

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: local
      POSTGRES_PASSWORD: sql
    volumes:
      - stuff:/var/lib/postgresql/data
    networks:
      - traefik-public

volumes:
  stuff: {}
networks:
  traefik-public: